@model AlliedTimbers.Models.Accommodation

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";


}

<style scoped>
    input[type=checkbox] + label {
        display: inline-block;
        margin: 0.2em;
        cursor: pointer;
        padding: 0.2em;
    }

    input[type=checkbox] {
        content: "\2714";
        border: 0.1em solid #000;
        border-radius: 0.2em;
        width: 1.5em;
        height: 1.5em;
        padding-left: 0.2em;
        padding-bottom: 0.3em;
        margin-right: 0.2em;
        vertical-align: bottom;
        color: transparent;
        transition: .2s;
    }

        input[type=checkbox] + label:active:before {
            transform: scale(0);
        }


        input[type=checkbox]:checked + label:before {
            background-color: #b59410;
            border-color: #b59410;
            color: #fff;
            transform: scale(1);
        }

        input[type=checkbox]:active + label:before {
            transform: scale(1);
            border-color: #aaa;
        }
</style>

<div class="main-panel">
    <div class="content-wrapper">
        <div class="row">
            <div class="col-lg-12 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        @using (Html.BeginForm("Create", "Accommodations", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            <h4>Create Accommodation</h4>
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Price, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Price, new
                                    {
                                        htmlAttributes = new { @class = "form-control", placeholder = "e.g 1.00" }
                                    })
                                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Image1, "Accommodation Image", htmlAttributes: new { @class = "control-label" })
                                @*@Html.TextBoxFor(model => model.Image, new { @class = "form-control", type = "file", name = "imageFile" })*@
                                <input type="file" name="imageFile1" class="form-control" />
                                @Html.ValidationMessageFor(model => model.Image1, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Image2, "Accommodation Image", htmlAttributes: new { @class = "control-label" })
                                <input type="file" name="imageFile2" class="form-control" />
                                @Html.ValidationMessageFor(model => model.Image2, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="row">
                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Save" class="btn btn-outline-warning" />
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <button onclick="window.location.href='@Url.Action("Index", "Accommodations" )'"
                                                type="button" class="btn btn-info">
                                            Cancel
                                        </button>
                                    </div>
                                </div>
                            </div>

                        </div>
                        }
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}